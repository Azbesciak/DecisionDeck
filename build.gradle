buildscript {
    ext {
        kotlin_version = '1.3.21'
    }

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
}

wrapper {
    jarFile = "./gradle/wrapper/gradle-wrapper.jar"
    gradleVersion = '5.2.1'
}

def runnableJVMProjects = [
        "ahp", "ahp-criteria", "topsis", "topsis-distance-ranking", "topsis-ideal-alternatives", "topsis-normalization-weighting"
]

subprojects {
    group 'pl.poznan.put'
    version '1.0'

    apply plugin: 'kotlin'
    apply plugin: 'java'
    if (project.name in runnableJVMProjects) {
        apply plugin: 'application'
        apply plugin: 'com.github.johnrengelman.shadow'
    }

    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        if (project.name.startsWith("ahp")) {
            maven {
                url "http://dl.bintray.com/kyonifer/maven"
            }
        }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        compile group: 'org.decision-deck', name: 'xmcda', version: '0.6'
        compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.4.0-b180830.0359'
        compile group: 'com.sun.activation', name: 'javax.activation', version: '1.2.0'
        compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.4.0-b180830.0438'
        compile group: 'com.sun.istack', name: 'istack-commons-runtime', version: '3.0.7'
        if (project.name != "utils")
            compile project(':utils')
        if (project.name.startsWith("topsis")) {
            testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.0-M1'
            if (project.name != "topsis-common")
                compile project(':topsis-common')
        }
        if (project.name.startsWith("ahp") && project.name != 'ahp-base') {
            compile project(':ahp-base')
        }
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
}

task genExecutables {
    runnableJVMProjects.each { proj ->
        copy {
            from 'sh-templates/jvm/'
            into proj
            filter { line -> line.replaceAll("\\{project}", proj) }
        }
    }
}
